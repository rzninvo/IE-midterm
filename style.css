
/* Making all our elements border-boxed so they have a more intuitive way of having heights and widths
   Also making the font of all the elements sans-serif */
*{
    box-sizing: border-box;
    font-family: sans-serif;
}
/* Making our body a flex display just so we can put everything in the centre of our webpage */
body {
    display: flex;
    background-image: url('background.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
    align-items: center;
    justify-content: center;
}

/* Giving margins and font size to h1 headers */
h1{
    margin-top: 0;
    margin-bottom: 15px;
    font-size: 30px;
}

/* Styling my buttons ( based on bootstrap ) */
button {
    width: 100px;
    height: 30px;
    margin: 5px auto;
    cursor: pointer;
    font-size: 15px;
    color: white;
    background-color: #eca35c;
    border: 1px solid transparent;
    border-color: #eca35c;
    padding: .375rem .75rem;
    border-radius: .25em;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
}

/* Giving a style for when we hover on the buttons with our cursor */
button:hover {
    background-color: #c2874d;
    border-color: #c2874d;
}

/* Giving a style for when we click on the buttons */
button:focus {
    color: #000;
    background-color: #eca35c;
    border-color: #eca35c;
    box-shadow: 0 0 0 .25rem rgba(175, 99, 12, 0.5);
}


/* Giga panel is the gigachad panel that contains all of our elements in it. The reason we need such
   a panel is because we want to make every element in it to be transparent. Also it has the fit-content width for reactive reasons*/
.giga-panel {
    width: fit-content;
    margin: 50px auto;
    padding: 30px;
    border: 2px solid #2c1200;
    border-radius: 10px;
    background-color: #ffffff;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
    opacity: 0.8;
}


/* Alert box is the element which contains the alerts and status messages that javascript handles */
#alert-box {
    display: none;
    max-width: 350px;
    font-size: .9rem;
    text-align: center;
    color: #aa0000;
    border: 2px solid #aa0000;
    border-radius: 5px;
    margin: auto;
    margin-top: 20px;
    min-height: 1em;
    padding: 5px;
}

/* Below our alert box is the main panel that has a flex display and has a row direction. we have two container class
    elements which take place in this main panel */
.main-panel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
    gap: 50px;
}

/* We have two container class elements that also have flex display, but this time its a col direction. On the left one
    we have the radio boxes and the text field and on the right one we have a save container and two paragraphs */
.container {
    margin: 0;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: space-between;
    gap: 10px;
}

/* Save container is the element which shows us the saved gender for a given name(if it exists!). the save container is 
    not displayed by default but we handle its visibility in our script */
#save-container {
    display: none;
    border: 2px dotted #0804f39a;
}

/* Tweaking the button positions(Relative positioning) */
.buttons{
    margin-left: 20%;
}

/* Tweaking the button positions(Relative positioning) */
#clear-button{
    margin-left: 20%;
}